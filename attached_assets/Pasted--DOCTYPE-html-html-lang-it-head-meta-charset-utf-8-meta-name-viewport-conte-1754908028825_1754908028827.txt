<!DOCTYPE html>
<html lang="it">
<head>
  <meta charset="utf-8" />
  <meta name="viewport" content="width=device-width,initial-scale=1,maximum-scale=1" />
  <title>OSM Navigazione – Leaflet + OSRM</title>

  <!-- Leaflet CSS -->
  <link
    rel="stylesheet"
    href="https://unpkg.com/leaflet@1.9.4/dist/leaflet.css"
    integrity="sha256-p4NxAoJBhIIN+hmNHrzRCf9tD/miZyoHS5obTRR9BMY="
    crossorigin=""
  />
  <!-- Leaflet Routing Machine CSS -->
  <link
    rel="stylesheet"
    href="https://unpkg.com/leaflet-routing-machine@3.2.12/dist/leaflet-routing-machine.css"
  />

  <style>
    :root {
      --ui-bg: #ffffff;
      --ui-shadow: 0 6px 18px rgba(0,0,0,.12);
      --radius: 16px;
    }
    html, body { height: 100%; margin: 0; }
    #app { display: grid; grid-template-rows: 1fr auto; height: 100vh; background: #f6f7fb; }
    #map { height: 100%; width: 100%; }

    /* Pannello indicazioni */
    #panel {
      max-height: 38vh;
      overflow: auto;
      background: var(--ui-bg);
      box-shadow: var(--ui-shadow);
      border-radius: var(--radius);
      margin: 10px;
      padding: 10px;
      font-family: system-ui, -apple-system, Segoe UI, Roboto, Arial, sans-serif;
    }
    #panel h3 { margin: 6px 8px 8px; font-size: 16px; }
    .hint {
      font-size: 13px; color: #555; margin: 0 8px 8px;
    }

    /* Controllo custom: usa la mia posizione */
    .locate-control {
      background: var(--ui-bg);
      border-radius: 12px;
      padding: 8px 10px;
      box-shadow: var(--ui-shadow);
      font-size: 14px;
      cursor: pointer;
      border: none;
    }
    .locate-control:active { transform: scale(0.98); }

    /* Mobile: rendi i bersagli touch comodi ma non enormi */
    .leaflet-control-zoom a,
    .leaflet-routing-container .leaflet-bar a {
      min-width: 44px; min-height: 44px; line-height: 44px;
    }

    /* Styling LRM più pulito */
    .leaflet-routing-container {
      background: transparent;
      box-shadow: none;
    }
    .leaflet-routing-geocoders { display: none; } /* nasconde input se non servono */
  </style>
</head>
<body>
  <div id="app">
    <div id="map"></div>
    <div id="panel">
      <h3>Indicazioni (turn-by-turn)</h3>
      <p class="hint">
        1) Consenti la posizione &nbsp;•&nbsp; 2) Tocca la mappa per scegliere la destinazione &nbsp;•&nbsp;
        Trascina i pin per modificare il percorso.
      </p>
      <div id="itinerary"></div>
    </div>
  </div>

  <!-- Leaflet JS -->
  <script
    src="https://unpkg.com/leaflet@1.9.4/dist/leaflet.js"
    integrity="sha256-20nQCchB9co0qIjJZRGuk2/Z9VM+kNiyxNV1lvTlZBo="
    crossorigin=""
  ></script>
  <!-- Leaflet Routing Machine + OSRMv1 -->
  <script src="https://unpkg.com/leaflet-routing-machine@3.2.12/dist/leaflet-routing-machine.js"></script>

  <script>
    // ---- Map base (OSM) ----
    const map = L.map('map', {
      zoomControl: true
    });

    const osm = L.tileLayer(
      'https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png',
      {
        maxZoom: 19,
        attribution:
          '&copy; <a href="https://www.openstreetmap.org/copyright">OSM contributors</a>'
      }
    ).addTo(map);

    // Centro di fallback (Italia) se geoloc. non disponibile
    map.setView([41.8719, 12.5674], 6);

    // ---- Marker icone start/dest ----
    const startIcon = L.icon({
      iconUrl: 'https://unpkg.com/leaflet@1.9.4/dist/images/marker-icon.png',
      iconAnchor: [12, 41], popupAnchor: [1, -34],
      shadowUrl: 'https://unpkg.com/leaflet@1.9.4/dist/images/marker-shadow.png',
      iconSize: [25, 41], shadowSize: [41, 41]
    });
    const destIcon = L.icon({
      iconUrl: 'https://cdn.jsdelivr.net/gh/pointhi/leaflet-color-markers@master/img/marker-icon-2x-violet.png',
      iconSize: [25, 41], iconAnchor: [12, 41],
      popupAnchor: [1, -34],
      shadowUrl: 'https://unpkg.com/leaflet@1.9.4/dist/images/marker-shadow.png',
      shadowSize: [41,41]
    });

    // ---- Pannello indicazioni personalizzato ----
    // Costruiamo un "itineraryBuilder" che scriva nel nostro <div id="itinerary">
    const itineraryDiv = document.getElementById('itinerary');
    const itineraryBuilder = L.Routing.itineraryBuilder({
      containerClassName: '' // nessun wrapper extra
    });

    function renderItinerary(routes) {
      itineraryDiv.innerHTML = '';
      if (!routes || !routes[0]) return;
      const el = itineraryBuilder.createContainer();
      itineraryBuilder.setAlternativesVisible(true);
      itineraryBuilder.update(routes[0]);
      itineraryDiv.appendChild(el);
    }

    // ---- Router OSRM pubblico (profilo auto) ----
    const router = L.Routing.osrmv1({
      serviceUrl: 'https://router.project-osrm.org/route/v1',
      profile: 'driving', // 'driving', 'foot', 'bike'
      timeout: 15 * 1000
    });

    // ---- Controllo Routing ----
    const control = L.Routing.control({
      waypoints: [],
      router,
      routeWhileDragging: true,
      show: false,              // nasconde il pannello interno LRM
      collapsible: false,
      addWaypoints: true,
      draggableWaypoints: true,
      fitSelectedRoutes: true,
      formatter: new L.Routing.Formatter({ language: 'it', units: 'metric' }),
      createMarker: (i, wp, nWps) => {
        const icon = i === 0 ? startIcon : destIcon;
        return L.marker(wp.latLng, { draggable: true, icon });
      }
    })
    .on('routesfound', (e) => {
      renderItinerary(e.routes);
    })
    .on('routingerror', (e) => {
      console.warn('Errore routing:', e && e.error);
      itineraryDiv.innerHTML = '<p style="color:#c00">Errore nel calcolo del percorso. Riprova o sposta i punti.</p>';
    })
    .addTo(map);

    // ---- Click per impostare destinazione ----
    let startSet = false;
    map.on('click', (ev) => {
      const wps = control.getWaypoints();

      if (!startSet && wps[0] && wps[0].latLng) startSet = true;

      if (!startSet) {
        control.spliceWa
